@model IEnumerable<TrustTeamVersion4.Models.Domain.Home>
@{
	ViewData["Title"] = "Graphs";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script> -->
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>


<h2>Graphs</h2>
<h3>@ViewBag.filter</h3>
<div id="chart_div"></div>
@{
	string[] xas = (string[])ViewData["EfficiencyString"];
	double[] yas = (double[])ViewData["EfficiencyDouble"];
	IEnumerable<IGrouping<string, string>> hoursWorked = (IEnumerable<IGrouping<string, string>>)ViewData["GroupedByUrgency"];

}
<script type="text/javascript">

// Load the Visualization API and the corechart package.
google.charts.load('current', { 'packages': ['corechart','line'] });
// Set a callback to run when the Google Visualization API is loaded.
	google.charts.setOnLoadCallback(drawEfficiency);
	//google.charts.setOnLoadCallback(drawHoursworked);
	// Callback that creates and populates a data table,instantiates the pie chart, passes in the data and draws it.
	function drawEfficiency() {
		// Create the data table.
		var data = new google.visualization.DataTable();
		@{
			@:data.addColumn('string', 'Status');
			@:data.addColumn('number','Aantal');

			for (var k = 0; k < @yas.Length; k++)
			{
				@:data.addRows([['@xas[k]',@yas[k]]]);
			}
		}

		// Set chart options
		var options = {
			'title': 'Aantal tickets in functie van de status',
			'width': 800,
			'height': 600
		};
		// Instantiate and draw our chart, passing in some options.
		var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
		chart.draw(data, options);
	}
	
	
</script>

